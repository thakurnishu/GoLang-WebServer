@Library('Jenkins-Shared-Lib') _

pipeline{
    agent any

    environment{
        AZURE_SUBSCRIPTION_ID = credentials('subscription_id')
        AZURE_TENANT_ID = credentials('tenant_id')
        SERVICE_PRINCIPAL_ID = credentials('principal_id')
        SERVICE_PRINCIPAL_PASSWORD = credentials('principal_password')
        STORAGE_KEY = credentials('azure_storage_key')
    }

    stages{
        stage('Terraform Initialization'){
            steps{
                script{
                    terraInit(STORAGE_KEY)
                }
            }
        }
        stage('Terraform Plan'){
            steps{
                script{
                    terraPlan(
                        SUBSCRIPTION_ID: AZURE_SUBSCRIPTION_ID,
                        TENANT_ID: AZURE_TENANT_ID,
                        PRINCIPAL_ID: SERVICE_PRINCIPAL_ID,
                        PRINCIPAL_PASSWORD: SERVICE_PRINCIPAL_PASSWORD
                    )
                }
            }
        }
        stage('Terraform Apply'){
            steps{
                script{
                    terraApply()
                }
            }
        }
        stage('Connecting to Kubernetes Cluster'){
            steps{
                script{
                    connectToK8S()
                }
            }
        }
        // stage('Install ArgoCD') {
        //     script {
        //         def isArgoCDInstalled = sh(script: 'kubectl get all -n argocd', returnStatus: true) == 0
        //         if (!isArgoCDInstalled) {
        //             sh 'kubectl apply -n argocd -f argocd-installation.yaml'
        //         } else {
        //             echo 'ArgoCD is already installed. Skipping installation.'
        //         }
        //     }
        // }
    }
}